/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResetCursorData {
    #[serde(rename = "batchIndex", skip_serializing_if = "Option::is_none")]
    pub batch_index: Option<i32>,
    #[serde(rename = "entryId", skip_serializing_if = "Option::is_none")]
    pub entry_id: Option<i64>,
    #[serde(rename = "excluded", skip_serializing_if = "Option::is_none")]
    pub excluded: Option<bool>,
    #[serde(rename = "ledgerId", skip_serializing_if = "Option::is_none")]
    pub ledger_id: Option<i64>,
    #[serde(rename = "partitionIndex", skip_serializing_if = "Option::is_none")]
    pub partition_index: Option<i32>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, String>>,
}

impl ResetCursorData {
    pub fn new() -> ResetCursorData {
        ResetCursorData {
            batch_index: None,
            entry_id: None,
            excluded: None,
            ledger_id: None,
            partition_index: None,
            properties: None,
        }
    }
}

