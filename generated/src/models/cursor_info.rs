/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CursorInfo {
    #[serde(rename = "creationDate", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<String>,
    #[serde(rename = "cursorsLedgerId", skip_serializing_if = "Option::is_none")]
    pub cursors_ledger_id: Option<i64>,
    #[serde(rename = "individualDeletedMessages", skip_serializing_if = "Option::is_none")]
    pub individual_deleted_messages: Option<Vec<models::MessageRangeInfo>>,
    #[serde(rename = "markDelete", skip_serializing_if = "Option::is_none")]
    pub mark_delete: Option<Box<models::PositionInfo>>,
    #[serde(rename = "modificationDate", skip_serializing_if = "Option::is_none")]
    pub modification_date: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, i64>>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i64>,
}

impl CursorInfo {
    pub fn new() -> CursorInfo {
        CursorInfo {
            creation_date: None,
            cursors_ledger_id: None,
            individual_deleted_messages: None,
            mark_delete: None,
            modification_date: None,
            properties: None,
            version: None,
        }
    }
}

