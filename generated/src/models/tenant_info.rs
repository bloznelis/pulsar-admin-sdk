/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// TenantInfo : Information of adminRoles and allowedClusters for tenant
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantInfo {
    /// Comma separated list of auth principal allowed to administrate the tenant.
    #[serde(rename = "adminRoles", skip_serializing_if = "Option::is_none")]
    pub admin_roles: Option<Vec<String>>,
    /// Comma separated allowed clusters.
    #[serde(rename = "allowedClusters", skip_serializing_if = "Option::is_none")]
    pub allowed_clusters: Option<Vec<String>>,
}

impl TenantInfo {
    /// Information of adminRoles and allowedClusters for tenant
    pub fn new() -> TenantInfo {
        TenantInfo {
            admin_roles: None,
            allowed_clusters: None,
        }
    }
}

