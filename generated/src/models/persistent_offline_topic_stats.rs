/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersistentOfflineTopicStats {
    #[serde(rename = "brokerName", skip_serializing_if = "Option::is_none")]
    pub broker_name: Option<String>,
    #[serde(rename = "cursorDetails", skip_serializing_if = "Option::is_none")]
    pub cursor_details: Option<std::collections::HashMap<String, models::CursorDetails>>,
    #[serde(rename = "dataLedgerDetails", skip_serializing_if = "Option::is_none")]
    pub data_ledger_details: Option<Vec<models::LedgerDetails>>,
    #[serde(rename = "messageBacklog", skip_serializing_if = "Option::is_none")]
    pub message_backlog: Option<i64>,
    #[serde(rename = "statGeneratedAt", skip_serializing_if = "Option::is_none")]
    pub stat_generated_at: Option<String>,
    #[serde(rename = "storageSize", skip_serializing_if = "Option::is_none")]
    pub storage_size: Option<i64>,
    #[serde(rename = "topicName", skip_serializing_if = "Option::is_none")]
    pub topic_name: Option<String>,
    #[serde(rename = "totalMessages", skip_serializing_if = "Option::is_none")]
    pub total_messages: Option<i64>,
}

impl PersistentOfflineTopicStats {
    pub fn new() -> PersistentOfflineTopicStats {
        PersistentOfflineTopicStats {
            broker_name: None,
            cursor_details: None,
            data_ledger_details: None,
            message_backlog: None,
            stat_generated_at: None,
            storage_size: None,
            topic_name: None,
            total_messages: None,
        }
    }
}

