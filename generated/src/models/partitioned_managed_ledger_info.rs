/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PartitionedManagedLedgerInfo {
    #[serde(rename = "creationDate", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<String>,
    #[serde(rename = "cursors", skip_serializing_if = "Option::is_none")]
    pub cursors: Option<std::collections::HashMap<String, models::CursorInfo>>,
    #[serde(rename = "ledgers", skip_serializing_if = "Option::is_none")]
    pub ledgers: Option<Vec<models::LedgerInfo>>,
    #[serde(rename = "modificationDate", skip_serializing_if = "Option::is_none")]
    pub modification_date: Option<String>,
    #[serde(rename = "partitions", skip_serializing_if = "Option::is_none")]
    pub partitions: Option<std::collections::HashMap<String, models::ManagedLedgerInfo>>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "terminatedPosition", skip_serializing_if = "Option::is_none")]
    pub terminated_position: Option<Box<models::PositionInfo>>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i64>,
}

impl PartitionedManagedLedgerInfo {
    pub fn new() -> PartitionedManagedLedgerInfo {
        PartitionedManagedLedgerInfo {
            creation_date: None,
            cursors: None,
            ledgers: None,
            modification_date: None,
            partitions: None,
            properties: None,
            terminated_position: None,
            version: None,
        }
    }
}

