/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ThreadContainerFactory {
    #[serde(rename = "pulsarClientMemoryLimit", skip_serializing_if = "Option::is_none")]
    pub pulsar_client_memory_limit: Option<Box<models::MemoryLimit>>,
    #[serde(rename = "threadGroupName", skip_serializing_if = "Option::is_none")]
    pub thread_group_name: Option<String>,
}

impl ThreadContainerFactory {
    pub fn new() -> ThreadContainerFactory {
        ThreadContainerFactory {
            pulsar_client_memory_limit: None,
            thread_group_name: None,
        }
    }
}

