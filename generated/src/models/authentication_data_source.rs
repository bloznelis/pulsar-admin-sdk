/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthenticationDataSource {
    #[serde(rename = "commandData", skip_serializing_if = "Option::is_none")]
    pub command_data: Option<String>,
    #[serde(rename = "httpAuthType", skip_serializing_if = "Option::is_none")]
    pub http_auth_type: Option<String>,
    #[serde(rename = "peerAddress", skip_serializing_if = "Option::is_none")]
    pub peer_address: Option<serde_json::Value>,
    #[serde(rename = "subscription", skip_serializing_if = "Option::is_none")]
    pub subscription: Option<String>,
    #[serde(rename = "tlsCertificates", skip_serializing_if = "Option::is_none")]
    pub tls_certificates: Option<Vec<models::Certificate>>,
}

impl AuthenticationDataSource {
    pub fn new() -> AuthenticationDataSource {
        AuthenticationDataSource {
            command_data: None,
            http_auth_type: None,
            peer_address: None,
            subscription: None,
            tls_certificates: None,
        }
    }
}

