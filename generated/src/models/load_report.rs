/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LoadReport {
    #[serde(rename = "allocatedBandwidthIn", skip_serializing_if = "Option::is_none")]
    pub allocated_bandwidth_in: Option<f64>,
    #[serde(rename = "allocatedBandwidthOut", skip_serializing_if = "Option::is_none")]
    pub allocated_bandwidth_out: Option<f64>,
    #[serde(rename = "allocatedCPU", skip_serializing_if = "Option::is_none")]
    pub allocated_cpu: Option<f64>,
    #[serde(rename = "allocatedMemory", skip_serializing_if = "Option::is_none")]
    pub allocated_memory: Option<f64>,
    #[serde(rename = "allocatedMsgRateIn", skip_serializing_if = "Option::is_none")]
    pub allocated_msg_rate_in: Option<f64>,
    #[serde(rename = "allocatedMsgRateOut", skip_serializing_if = "Option::is_none")]
    pub allocated_msg_rate_out: Option<f64>,
    #[serde(rename = "bandwidthIn", skip_serializing_if = "Option::is_none")]
    pub bandwidth_in: Option<Box<models::ResourceUsage>>,
    #[serde(rename = "bandwidthOut", skip_serializing_if = "Option::is_none")]
    pub bandwidth_out: Option<Box<models::ResourceUsage>>,
    #[serde(rename = "brokerVersionString", skip_serializing_if = "Option::is_none")]
    pub broker_version_string: Option<String>,
    #[serde(rename = "bundleGains", skip_serializing_if = "Option::is_none")]
    pub bundle_gains: Option<Vec<String>>,
    #[serde(rename = "bundleLosses", skip_serializing_if = "Option::is_none")]
    pub bundle_losses: Option<Vec<String>>,
    #[serde(rename = "bundleStats", skip_serializing_if = "Option::is_none")]
    pub bundle_stats: Option<std::collections::HashMap<String, models::NamespaceBundleStats>>,
    #[serde(rename = "cpu", skip_serializing_if = "Option::is_none")]
    pub cpu: Option<Box<models::ResourceUsage>>,
    #[serde(rename = "directMemory", skip_serializing_if = "Option::is_none")]
    pub direct_memory: Option<Box<models::ResourceUsage>>,
    #[serde(rename = "lastUpdate", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<i64>,
    #[serde(rename = "loadManagerClassName", skip_serializing_if = "Option::is_none")]
    pub load_manager_class_name: Option<String>,
    #[serde(rename = "loadReportType", skip_serializing_if = "Option::is_none")]
    pub load_report_type: Option<String>,
    #[serde(rename = "memory", skip_serializing_if = "Option::is_none")]
    pub memory: Option<Box<models::ResourceUsage>>,
    #[serde(rename = "msgRateIn", skip_serializing_if = "Option::is_none")]
    pub msg_rate_in: Option<f64>,
    #[serde(rename = "msgRateOut", skip_serializing_if = "Option::is_none")]
    pub msg_rate_out: Option<f64>,
    #[serde(rename = "msgThroughputIn", skip_serializing_if = "Option::is_none")]
    pub msg_throughput_in: Option<f64>,
    #[serde(rename = "msgThroughputOut", skip_serializing_if = "Option::is_none")]
    pub msg_throughput_out: Option<f64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "nonPersistentTopicsEnabled", skip_serializing_if = "Option::is_none")]
    pub non_persistent_topics_enabled: Option<bool>,
    #[serde(rename = "numBundles", skip_serializing_if = "Option::is_none")]
    pub num_bundles: Option<i32>,
    #[serde(rename = "numConsumers", skip_serializing_if = "Option::is_none")]
    pub num_consumers: Option<i32>,
    #[serde(rename = "numProducers", skip_serializing_if = "Option::is_none")]
    pub num_producers: Option<i32>,
    #[serde(rename = "numTopics", skip_serializing_if = "Option::is_none")]
    pub num_topics: Option<i64>,
    #[serde(rename = "overLoaded", skip_serializing_if = "Option::is_none")]
    pub over_loaded: Option<bool>,
    #[serde(rename = "persistentTopicsEnabled", skip_serializing_if = "Option::is_none")]
    pub persistent_topics_enabled: Option<bool>,
    #[serde(rename = "preAllocatedBandwidthIn", skip_serializing_if = "Option::is_none")]
    pub pre_allocated_bandwidth_in: Option<f64>,
    #[serde(rename = "preAllocatedBandwidthOut", skip_serializing_if = "Option::is_none")]
    pub pre_allocated_bandwidth_out: Option<f64>,
    #[serde(rename = "preAllocatedCPU", skip_serializing_if = "Option::is_none")]
    pub pre_allocated_cpu: Option<f64>,
    #[serde(rename = "preAllocatedMemory", skip_serializing_if = "Option::is_none")]
    pub pre_allocated_memory: Option<f64>,
    #[serde(rename = "preAllocatedMsgRateIn", skip_serializing_if = "Option::is_none")]
    pub pre_allocated_msg_rate_in: Option<f64>,
    #[serde(rename = "preAllocatedMsgRateOut", skip_serializing_if = "Option::is_none")]
    pub pre_allocated_msg_rate_out: Option<f64>,
    #[serde(rename = "protocols", skip_serializing_if = "Option::is_none")]
    pub protocols: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "pulsarServiceUrl", skip_serializing_if = "Option::is_none")]
    pub pulsar_service_url: Option<String>,
    #[serde(rename = "pulsarServiceUrlTls", skip_serializing_if = "Option::is_none")]
    pub pulsar_service_url_tls: Option<String>,
    #[serde(rename = "startTimestamp", skip_serializing_if = "Option::is_none")]
    pub start_timestamp: Option<i64>,
    #[serde(rename = "systemResourceUsage", skip_serializing_if = "Option::is_none")]
    pub system_resource_usage: Option<Box<models::SystemResourceUsage>>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
    #[serde(rename = "underLoaded", skip_serializing_if = "Option::is_none")]
    pub under_loaded: Option<bool>,
    #[serde(rename = "webServiceUrl", skip_serializing_if = "Option::is_none")]
    pub web_service_url: Option<String>,
    #[serde(rename = "webServiceUrlTls", skip_serializing_if = "Option::is_none")]
    pub web_service_url_tls: Option<String>,
}

impl LoadReport {
    pub fn new() -> LoadReport {
        LoadReport {
            allocated_bandwidth_in: None,
            allocated_bandwidth_out: None,
            allocated_cpu: None,
            allocated_memory: None,
            allocated_msg_rate_in: None,
            allocated_msg_rate_out: None,
            bandwidth_in: None,
            bandwidth_out: None,
            broker_version_string: None,
            bundle_gains: None,
            bundle_losses: None,
            bundle_stats: None,
            cpu: None,
            direct_memory: None,
            last_update: None,
            load_manager_class_name: None,
            load_report_type: None,
            memory: None,
            msg_rate_in: None,
            msg_rate_out: None,
            msg_throughput_in: None,
            msg_throughput_out: None,
            name: None,
            non_persistent_topics_enabled: None,
            num_bundles: None,
            num_consumers: None,
            num_producers: None,
            num_topics: None,
            over_loaded: None,
            persistent_topics_enabled: None,
            pre_allocated_bandwidth_in: None,
            pre_allocated_bandwidth_out: None,
            pre_allocated_cpu: None,
            pre_allocated_memory: None,
            pre_allocated_msg_rate_in: None,
            pre_allocated_msg_rate_out: None,
            protocols: None,
            pulsar_service_url: None,
            pulsar_service_url_tls: None,
            start_timestamp: None,
            system_resource_usage: None,
            timestamp: None,
            under_loaded: None,
            web_service_url: None,
            web_service_url_tls: None,
        }
    }
}

