/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NamespaceOwnershipStatus {
    #[serde(rename = "broker_assignment", skip_serializing_if = "Option::is_none")]
    pub broker_assignment: Option<BrokerAssignment>,
    #[serde(rename = "is_active", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    #[serde(rename = "is_controlled", skip_serializing_if = "Option::is_none")]
    pub is_controlled: Option<bool>,
}

impl NamespaceOwnershipStatus {
    pub fn new() -> NamespaceOwnershipStatus {
        NamespaceOwnershipStatus {
            broker_assignment: None,
            is_active: None,
            is_controlled: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BrokerAssignment {
    #[serde(rename = "primary")]
    Primary,
    #[serde(rename = "secondary")]
    Secondary,
    #[serde(rename = "shared")]
    Shared,
}

impl Default for BrokerAssignment {
    fn default() -> BrokerAssignment {
        Self::Primary
    }
}

