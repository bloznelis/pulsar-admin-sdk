/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterUrl {
    #[serde(rename = "brokerServiceUrl", skip_serializing_if = "Option::is_none")]
    pub broker_service_url: Option<String>,
    #[serde(rename = "brokerServiceUrlTls", skip_serializing_if = "Option::is_none")]
    pub broker_service_url_tls: Option<String>,
    #[serde(rename = "empty", skip_serializing_if = "Option::is_none")]
    pub empty: Option<bool>,
    #[serde(rename = "serviceUrl", skip_serializing_if = "Option::is_none")]
    pub service_url: Option<String>,
    #[serde(rename = "serviceUrlTls", skip_serializing_if = "Option::is_none")]
    pub service_url_tls: Option<String>,
}

impl ClusterUrl {
    pub fn new() -> ClusterUrl {
        ClusterUrl {
            broker_service_url: None,
            broker_service_url_tls: None,
            empty: None,
            service_url: None,
            service_url_tls: None,
        }
    }
}

