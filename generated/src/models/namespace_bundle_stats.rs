/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NamespaceBundleStats {
    #[serde(rename = "cacheSize", skip_serializing_if = "Option::is_none")]
    pub cache_size: Option<i64>,
    #[serde(rename = "consumerCount", skip_serializing_if = "Option::is_none")]
    pub consumer_count: Option<i32>,
    #[serde(rename = "msgRateIn", skip_serializing_if = "Option::is_none")]
    pub msg_rate_in: Option<f64>,
    #[serde(rename = "msgRateOut", skip_serializing_if = "Option::is_none")]
    pub msg_rate_out: Option<f64>,
    #[serde(rename = "msgThroughputIn", skip_serializing_if = "Option::is_none")]
    pub msg_throughput_in: Option<f64>,
    #[serde(rename = "msgThroughputOut", skip_serializing_if = "Option::is_none")]
    pub msg_throughput_out: Option<f64>,
    #[serde(rename = "producerCount", skip_serializing_if = "Option::is_none")]
    pub producer_count: Option<i32>,
    #[serde(rename = "topics", skip_serializing_if = "Option::is_none")]
    pub topics: Option<i64>,
}

impl NamespaceBundleStats {
    pub fn new() -> NamespaceBundleStats {
        NamespaceBundleStats {
            cache_size: None,
            consumer_count: None,
            msg_rate_in: None,
            msg_rate_out: None,
            msg_throughput_in: None,
            msg_throughput_out: None,
            producer_count: None,
            topics: None,
        }
    }
}

