/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LedgerInfo {
    #[serde(rename = "entries", skip_serializing_if = "Option::is_none")]
    pub entries: Option<i64>,
    #[serde(rename = "ledgerId", skip_serializing_if = "Option::is_none")]
    pub ledger_id: Option<i64>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<String>,
    #[serde(rename = "offloaded", skip_serializing_if = "Option::is_none")]
    pub offloaded: Option<bool>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    #[serde(rename = "underReplicated", skip_serializing_if = "Option::is_none")]
    pub under_replicated: Option<bool>,
}

impl LedgerInfo {
    pub fn new() -> LedgerInfo {
        LedgerInfo {
            entries: None,
            ledger_id: None,
            metadata: None,
            offloaded: None,
            size: None,
            under_replicated: None,
        }
    }
}

